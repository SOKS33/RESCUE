/* -*- Mode:C++; c-file-style:"gnu"; indent-tabs-mode:nil; -*- */
// Copied from Sebastian Kï¿½hlmorgen TU Dresden, original Matlab code from Petri Komulainen UOULU

#ifndef BLACKBOX_NO_2_H
#define BLACKBOX_NO_2_H

#include "ns3/object.h"
#include "ns3/random-variable-stream.h"
#include "ns3/double.h"
#include "ns3/blackbox_no1.h"

#include <cmath>
#include <numeric>
#include <vector>

namespace ns3 {
    //===============================NEW_MODULATION================================================================

    // =========================BPSK_1=========================

    const double BPSK_1_mi[] = {
        0.26353698, 0.323915577, 0.396270942, 0.482062256, 0.582466961, 0.6981104, 0.828719961, 0.972731349, 0.987761338, 1.002890414,
        1.018114136, 1.03342787, 1.048826784, 1.064305847, 1.079859836, 1.095483326, 1.111170703, 1.126916155, 1.142713681, 1.158557093,
        1.174440014, 1.190355888, 1.23823302
    }; // length: 23

    const double BPSK_1_alpha[] = {
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0001, 0.0059, 0.0621, 0.3085, 0.7032, 0.9355, 0.9942, 0.9996, 0.9999
    }; // length: 23

    const double BPSK_1_mu[] = {
        3498.9649, 3367.2578, 3204.2856, 2994.4516, 2729.3885, 2386.424, 1941.0607, 1339.0397, 1263.0909, 1186.1691,
        1104.3832, 1017.8698, 924.0939, 820.6682, 699.5137514, 551.222714, 376.9247255, 221.9713666, 126.3399596,
        76.61550388, 76.72413793, 604.75, 1
    }; // length: 23

    const double BPSK_1_sigma[] = {
        49.21803846, 50.40759101, 51.36942393, 53.99000972, 56.45480743, 60.25217221, 66.79964397, 80.18609421, 82.15459315, 85.33752489,
        89.9857361, 94.80452857, 101.6204101, 113.6665242, 135.3738128, 169.6820683, 198.0598271, 181.8197914, 140.4648333, 106.9059394,
        290.8021449, 712.5748499, 0
    }; // length: 23

    const double BPSK_1_ber[] = {
        0.437370613, 0.420907225, 0.4005357, 0.37430645, 0.341173563, 0.298303, 0.242632588, 0.167379963, 0.157886363, 0.148271138,
        0.1380479, 0.127233725, 0.115511738, 0.102583525, 0.087430475, 0.068496313, 0.044189713, 0.01918665, 0.004687213, 0.000617713,
        0.000055625, 3.02375E-05, 1.25e-08
    }; // length: 23

    const double BPSK_1_ber_Log[] = {
        -0.82697436, -0.865342838, -0.914952378, -0.982680432, -1.07536395, -1.209645531, -1.416206965, -1.787488826, -1.845879729, -1.908712671,
        -1.980154553, -2.06172953, -2.158383131, -2.277077934, -2.436911373, -2.680975367, -3.119263266, -3.953540554, -5.362917223, -7.389487419,
        -9.796877817, -10.40642768, -18.19753719
    }; // length: 23

    // =========================BPSK_2=========================

    const double BPSK_2_mi[] = {
        0.52707396, 0.647831155, 0.792541885, 0.964124511, 1.164933921, 1.18668354, 1.208739856, 1.231103134,
        1.253773448, 1.27675067, 1.300034462, 1.32362427, 1.347519312, 1.371718574, 1.3962208, 1.421024482
    }; // length: 16

    const double BPSK_2_alpha[] = {
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0031, 0.0641, 0.3846, 0.8256, 0.9826, 0.9996, 0.9999
    }; // length: 16

    const double BPSK_2_mu[] = {
        3209.0031, 2992.014, 2702.6341, 2293.8407, 1624.7127, 1521.1119, 1397.8473, 1251.1143,
        1057.137, 782.3458722, 457.6252805, 206.7302567, 97.06307339, 47.05172414, 141.75, 1
    }; // length: 16

    const double BPSK_2_sigma[] = {
        51.51546831, 53.5933674, 58.38929481, 67.82795726, 101.9796761, 113.950873, 132.642328, 161.5737765,
        211.4744537, 281.832294, 301.9662661, 224.6756205, 141.544596, 98.03150769, 189.5650724, 0
    }; // length: 16

    const double BPSK_2_ber[] = {
        0.401125388, 0.37400175, 0.337829263, 0.286730088, 0.203089088, 0.190138988, 0.174730913, 0.156389288,
        0.132142125, 0.097490075, 0.053536438, 0.015902725, 0.002115975, 0.000102338, 7.0875e-06, 1.25e-08
    }; // length: 16

    const double BPSK_2_ber_Log[] = {
        -0.913481214, -0.983494802, -1.085214652, -1.249213967, -1.594110542, -1.659999961, -1.744508131, -1.855406947,
        -2.023877231, -2.328004701, -2.927392782, -4.141264801, -6.15823958, -9.187234383, -11.85717789, -18.19753719
    }; // length: 16


    // =========================BPSK_3=========================

    const double BPSK_3_mi[] = {
        0.417127171, 0.517665796, 0.640761361, 0.79061094, 0.971746732,
        1.188812827, 1.446186767, 1.474288355, 1.502832539, 1.531822002,
        1.561259246, 1.591146582, 1.621486121
    }; // length: 13

    const double BPSK_3_alpha[] = {
        0, 0, 0, 0, 0, 0, 0.0006, 0.0278, 0.2588, 0.725, 0.9686, 0.9992, 0.9999
    }; // length: 13

    const double BPSK_3_mu[] = {
        3498.5309, 3367.0317, 3195.896, 2968.984, 2658.0223,
        2188.7706, 991.4606764, 624.6653981, 299.8198867,
        127.5414545, 57.70063694, 44.75, 1
    }; // length: 13

    const double BPSK_3_sigma[] = {
        48.04118484, 48.91264806, 51.44421478, 54.13845252, 61.33164403,
        75.75456852, 281.8226884, 339.3119509, 283.4998262, 180.3005542,
        99.28977599, 64.92358145, 0
    }; // length: 13

    const double BPSK_3_ber[] = {
        0.437316363, 0.420878963, 0.399487, 0.371123, 0.332252788,
        0.273596325, 0.123858225, 0.075912463, 0.027778313, 0.004384238,
        0.000226475, 0.000004475, 1.25e-08
    }; // length: 13

    const double BPSK_3_ber_Log[] = {
        -0.827098404, -0.865409987, -0.917574055, -0.991221735, -1.101859192,
        -1.296101525, -2.088617714, -2.578174412, -3.583499689, -5.429739557,
        -8.392875994, -12.31700421, -18.19753719
    }; // length: 13

    //===============================NEW_MODULATION================================================================

    // =========================QPSK_1=========================

    const double QPSK_1_mi[] = {
        0.138731834, 0.172174041, 0.213121554, 0.262972002, 0.323235271, 0.395459546, 0.481105782, 0.581355563, 0.696841564, 0.827302389,
        0.897725406, 0.971189066, 1.047236913, 1.125291871, 1.141084316, 1.156923293, 1.172802445, 1.188715232, 1.20465494, 1.220614678,
        1.236587387, 1.252565848, 1.268542686, 1.284510376, 1.300461253, 1.31638752, 1.332281258, 1.348134432, 1.363938906, 1.379686453
    }; // length: 30

    const double QPSK_1_alpha[] = {
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0013, 0.0144, 0.0834, 0.2798, 0.5647, 0.797, 0.931, 0.9727, 0.9841, 0.9967, 0.9979, 0.9983, 0.9992, 0.999
    }; // length: 30

    const double QPSK_1_mu[] = {
        3458.2277, 3367.2552, 3260.6058, 3131.1784, 2974.5226, 2782.2711, 2554.4163, 2277.3866, 1942.1552, 1542.9819,
        1317.4714, 1071.5063, 803.433, 506.1265, 439.2749, 373.1391, 302.13077, 223.8934659, 151.677722, 95.42752013,
        61.75005743, 44.43004926, 59.96811594, 70.65567766, 114.918239, 46.27272727, 25.66666667, 12.05882353, 3.625, 1.4
    }; // length: 30

    const double QPSK_1_sigma[] = {
        49.85808897, 50.07446873, 51.26990605, 52.26529957, 53.81289132, 54.80552864, 55.43385685, 57.71708817, 59.45258257, 60.15939733,
        60.66057824, 60.67660443, 63.68185023, 71.95564925, 74.23114142, 80.4926609, 87.47114383, 95.61365909, 90.81353713, 77.04243341,
        63.75245105, 70.11651068, 131.1419494, 136.2506292, 146.6620143, 74.32583363, 28.3007656, 13.67694496, 2.875388173, 0.966091783
    }; // length: 30

    const double QPSK_1_ber[] = {
        0.432278463, 0.4209069, 0.407575725, 0.3913973, 0.371815325, 0.347783888, 0.319302038, 0.284673325, 0.2427694, 0.192872738,
        0.164683925, 0.133938288, 0.100429125, 0.063265813, 0.054909363, 0.046642388, 0.03771725, 0.027583675, 0.017378475, 0.008590863,
        0.003359975, 0.001127413, 0.000517225, 0.000241113, 0.0002284, 1.90875e-05, 6.7375e-06, 2.5625e-06, 3.625e-07, 0.000000175
    }; // length: 30

    const double QPSK_1_ber_Log[] = {
        -0.838685309, -0.86534361, -0.897528535, -0.938032122, -0.989357986, -1.056174005, -1.141617798, -1.256412984, -1.415643257, -1.645724699,
        -1.803727248, -2.010376126, -2.298303024, -2.760410183, -2.902071408, -3.065245548, -3.277637729, -3.590531167, -4.052522908, -4.757056141,
        -5.695821746, -6.787830095, -7.567032575, -8.330246928, -8.38441208, -10.86647689, -11.90782162, -12.87452721, -14.83024136, -15.55847986
    }; // length: 30

    // =========================QPSK_2=========================

    const double QPSK_2_mi[] = {
        0.143517261, 0.179063132, 0.223093174, 0.277463668, 0.344348082, 0.426243109, 0.525944004, 0.646470541, 0.790919092, 0.962211563,
        0.98091567, 0.99991465, 1.019210304, 1.038804312, 1.05869823, 1.078893477, 1.099391334, 1.120192936, 1.141299261, 1.162711125,
        1.184429177, 1.206453887, 1.228785542, 1.251424234, 1.274369856, 1.297622094, 1.321180414, 1.34504406, 1.369212042, 1.393683128,
        1.418455837, 1.443528431
    }; // length: 32

    const double QPSK_2_alpha[] = {
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0001, 0.0055, 0.0692, 0.342, 0.7434, 0.955, 0.9964, 0.9998, 0.9997
    }; // length: 32

    const double QPSK_2_mu[] = {
        3407.046, 3315.7055, 3207.8175, 3076.9372, 2918.3612, 2727.9004, 2486.484, 2176.1011, 1779.2245, 1274.3366,
        1216.1816, 1158.1156, 1099.2762, 1038.1736, 977.4901, 914.4836, 851.3927, 786.5277, 718.3299, 649.1947,
        573.8085, 496.1924, 414.9143, 324.8150815, 225.7492207, 130.4350021, 65.0550152, 32.04715511, 18.40444444, 12.47222222,
        5.5, 1
    }; // length: 32

    const double QPSK_2_sigma[] = {
        48.84241847, 49.87917965, 50.84068716, 51.86316646, 53.84413295, 56.60579212, 59.18618626, 63.2922639, 67.77112654, 70.13897809,
        69.37173967, 70.76379857, 70.63988613, 70.36284926, 71.06888335, 71.15498882, 71.67403577, 72.13712504, 73.21639796, 73.53607786,
        76.34897081, 79.68833921, 84.42606074, 93.24383514, 100.7755538, 92.27254168, 66.99430671, 41.29411124, 28.30333588, 22.92532737,
        6.363961031, 0
    }; // length: 32

    const double QPSK_2_ber[] = {
        0.42588075, 0.414463188, 0.400977188, 0.38461715, 0.36479515, 0.34098755, 0.3108105, 0.272012638, 0.222403063, 0.159292075,
        0.1520227, 0.14476445, 0.137409525, 0.1297717, 0.122186263, 0.11431045, 0.106424088, 0.098315963, 0.089791238, 0.081149338,
        0.071726063, 0.06202405, 0.051864288, 0.040597825, 0.02806345, 0.015176113, 0.005350775, 0.001027913, 0.000103525, 5.6125e-06,
        1.375e-07, 3.75e-08
    }; // length: 32

    const double QPSK_2_ber_Log[] = {
        -0.853595901, -0.88077112, -0.913850742, -0.955506855, -1.008419316, -1.075909313, -1.168571877, -1.301906752, -1.503263946, -1.837015812,
        -1.883725427, -1.93264734, -1.984789578, -2.041978526, -2.102208657, -2.168837286, -2.240323341, -2.319568879, -2.410267886, -2.511464149,
        -2.634901104, -2.780233066, -2.959124828, -3.204040785, -3.573287261, -4.188032633, -5.230513869, -6.880225232, -9.175697429, -12.0905143,
        -15.79964192, -17.0989249
    }; // length: 32

    // =========================QPSK_3=========================

    const double QPSK_3_mi[] = {
        0.137835029, 0.172339591, 0.215275892, 0.268594699, 0.334639762, 0.416195502, 0.516522123, 0.639364663, 0.788916006, 0.969705812,
        1.010022712, 1.051812507, 1.095111498, 1.139955295, 1.186378639, 1.21019321, 1.234415199, 1.259048613, 1.284097366, 1.309565269,
        1.335456025, 1.361773218, 1.388520309, 1.415700624, 1.443317345, 1.471373505, 1.499871975
    }; // length: 27

    const double QPSK_3_alpha[] = {
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0001, 0.0031, 0.0648, 0.3494, 0.7665, 0.9665, 0.999, 0.9999
    }; // length: 27

    const double QPSK_3_mu[] = {
        3405.1046, 3317.6819, 3213.9786, 3089.5745, 2938.4928, 2754.2178, 2517.8594, 2216.3672, 1813.4696, 1287.3199,
        1168.0918, 1046.5247, 919.6914, 793.409, 661.5708, 594.0477, 525.029, 452.3148, 376.6122, 295.3911391,
        206.0507573, 118.9400128, 58.6295727, 28.6, 17.69552239, 15.3, 1
    }; // length: 27

    const double QPSK_3_sigma[] = {
        48.42839446, 48.85234659, 50.2041013, 51.5591067, 53.1955743, 55.94122545, 60.87514936, 65.38453699, 71.14803778, 74.26992639,
        74.97959567, 72.31163729, 71.26678512, 71.22670316, 69.59977874, 70.49747949, 71.93906228, 72.56153539, 76.48905849, 83.20347642,
        89.70856725, 83.2593148, 59.94581626, 37.24460245, 27.92123992, 18.00648031, 0
    }; // length: 27

    const double QPSK_3_ber[] = {
        0.425638075, 0.414710238, 0.401747325, 0.386196813, 0.3673116, 0.344277225, 0.314732425, 0.2770459, 0.2266837, 0.160914988,
        0.146011475, 0.130815588, 0.114961425, 0.099176125, 0.08269635, 0.074255963, 0.065628625, 0.05653935, 0.047076525, 0.0369202,
        0.0256765, 0.013904088, 0.00476805, 0.000834763, 0.0000741, 1.9125e-06, 1.25e-08
    }; // length: 27

    const double QPSK_3_ber_Log[] = {
        -0.854165883, -0.880175226, -0.911931933, -0.951408163, -1.001544745, -1.06630806, -1.156032446, -1.283572083, -1.484199625, -1.826879081,
        -1.924070064, -2.033966677, -2.163158642, -2.310857969, -2.492579813, -2.600237201, -2.723743322, -2.872818423, -3.05598081, -3.298996452,
        -3.662179102, -4.275572417, -5.345817863, -7.088363305, -9.510095026, -13.16709927, -18.19753719
    }; // length: 27

    //===============================NEW_MODULATION================================================================

    // =========================16QAM_1=========================

    const double QAM16_1_mi[] = {
        0.734544517, 0.81376787, 0.894578668, 0.975627393, 1.054647729, 1.128388195, 1.193135226, 1.2071107, 1.221086173, 1.233385785,
        1.245685397, 1.28434127, 1.309510567
    }; // length: 13

    const double QAM16_1_alpha[] = {
        0, 0, 0, 0, 0, 0, 0.0999, 0.6789, 0.9697, 0.9902, 0.9922, 0.9967, 0.9992
    }; // length: 13

    const double QAM16_1_mu[] = {
        3321.2937, 3538.5633, 3430.3694, 3158.5102, 2613.522, 1745.716, 527.6548161, 312.540953, 111.8151815, 4.37755102,
        3.333333333, 2.333333333, 2
    }; // length: 13

    const double QAM16_1_sigma[] = {
        59.38882676, 64.44842863, 73.50842872, 86.18723757, 105.8831169, 133.9490649, 196.3266961, 178.3644571, 134.7554033, 8.983966596,
        2.881497927, 1.779513042, 1.603567451
    }; // length: 13

    const double QAM16_1_ber[] = {
        0.395392107, 0.421257536, 0.40837731, 0.376013119, 0.311133571, 0.207823333, 0.056540726, 0.01194725, 0.000403333, 5.10714E-06,
        3.09524E-06, 9.16667E-07, 1.90476E-07
    }; // length: 13

    const double QAM16_1_ber_Log[] = {
        -0.92787733, -0.864510909, -0.895563754, -0.978131245, -1.167532969, -1.571066919, -2.872794083, -4.427254153, -7.815747208, -12.18487044,
        -12.68564573, -13.90252193, -15.47373863
    }; // length: 13

    // =========================16QAM_2=========================

    const double QAM16_2_mi[] = {
        0.772312252, 0.89514117, 1.02734404, 1.167820925, 1.315444899, 1.469089033, 1.500572673, 1.532056313, 1.563745654, 1.62753574
    }; // length: 10

    const double QAM16_2_alpha[] = {
        0, 0, 0, 0, 0, 0.2098, 0.8756, 0.9866, 0.9907, 0.9924
    }; // length: 10

    const double QAM16_2_mu[] = {
        3892.9834, 3783.5061, 3612.3078, 3333.4405, 2816.9507, 419.1050367, 98.54742765, 2.514925373, 1.139784946, 1.092105263
    }; // length: 10

    const double QAM16_2_sigma[] = {
        62.34092367, 68.97527471, 77.41416637, 93.86901618, 142.8649107, 466.8819833, 211.0163968, 7.547080374, 0.348643266, 0.333771642
    }; // length: 10

    const double QAM16_2_ber[] = {
        0.463450405, 0.450417393, 0.430036643, 0.396838155, 0.335351274, 0.03942581, 0.00145944, 4.0119E-06, 1.2619E-06, 9.88095E-07
    }; // length: 10

    const double QAM16_2_ber_Log[] = {
        -0.769055901, -0.797580586, -0.843884858, -0.924226752, -1.092576718, -3.233334613, -6.529702152, -12.42624443, -13.58288826, -13.82748675
    }; // length: 10

    // =========================16QAM_3=========================

    const double QAM16_3_mi[] = {
        0.837591136, 0.989741372, 1.158468377, 1.342711755, 1.54101606, 1.751731387, 1.795524611, 1.839317834, 1.883605026, 1.973167348
    }; // length: 10

    const double QAM16_3_alpha[] = {
        0, 0, 0, 0, 0, 0.3888, 0.9416, 0.9965, 0.997, 0.9982
    }; // length: 10

    const double QAM16_3_mu[] = {
        3954.3474, 3853.0885, 3697.7739, 3446.9112, 2930.5285, 283.0394306, 82.53082192, 3.2, 1.066666667, 1
    }; // length: 10

    const double QAM16_3_sigma[] = {
        60.30770278, 67.56609938, 76.41350588, 97.97072083, 169.8110902, 390.3205291, 203.7472514, 8.090662737, 0.253708132, 0
    }; // length: 10

    const double QAM16_3_ber[] = {
        0.470755643, 0.458701012, 0.440211179, 0.410346571, 0.34887244, 0.020594488, 0.000573786, 1.33333E-06, 3.80952E-07, 2.14286E-07
    }; // length: 10

    const double QAM16_3_ber_Log[] = {
        -0.753416125, -0.779356671, -0.820500716, -0.89075318, -1.053048924, -3.882731807, -7.463254551, -13.52782849, -14.78059145, -15.3559556
    }; // length: 10

    //===============================MIXED_MODULATION================================================================

    // =========================QPSK+16QAM_2=========================

    const double QPSK_QAM16_2_mi[] = {
        0.430936599, 0.527458377, 0.641982212, 0.776165188, 0.931016013, 1.106499434, 1.301102857, 1.383719308, 1.468509744, 1.511447997
    }; // length: 10

    const double QPSK_QAM16_2_alpha[] = {
        0, 0, 0, 0, 0, 0, 0.5392, 0.9917, 0.9912, 0.9933
    }; // length: 10

    const double QPSK_QAM16_2_mu[] = {
        2912.3751, 2677.3632, 2388.2207, 2030.7582, 1575.2358, 968.209, 44.12825521, 1.313253012, 1.056818182, 1.253731343
    }; // length: 10

    const double QPSK_QAM16_2_sigma[] = {
        57.10555406, 59.34429257, 61.88248004, 65.16772833, 71.32964033, 84.70265033, 53.06699306, 0.999118036, 0.232821502, 0.724951066
    }; // length: 10

    const double QPSK_QAM16_2_ber[] = {
        0.346711321, 0.318733714, 0.284311988, 0.241756929, 0.187528071, 0.115262976, 0.00242075, 1.29762E-06, 1.10714E-06, 0.000001
    }; // length: 10

    const double QPSK_QAM16_2_ber_Log[] = {
        -1.059262772, -1.143399276, -1.257683094, -1.419822485, -1.67382673, -2.160539012, -6.023677869, -13.55497947, -13.71372786, -13.81551056
    }; // length: 10

    // =========================QPSK+QPSK+16QAM_3=========================

    const double QPSK_QPSK_QAM16_3_mi[] = {
        0.496977856, 0.613402239, 0.754171869, 0.922917923, 1.123087993, 1.235882865, 1.357520751, 1.408857616, 1.515492891, 1.627857577
    }; // length: 10

    const double QPSK_QPSK_QAM16_3_alpha[] = {
        0, 0, 0, 0, 0, 0, 0.0501, 0.6925, 0.9966, 0.9972
    }; // length: 10

    const double QPSK_QPSK_QAM16_3_mu[] = {
        2609.5763, 2307.1954, 1916.8165, 1414.5638, 789.9273, 454.1105, 102.2722392, 27.85365854, 1.058823529, 1.035714286
    }; // length: 10

    const double QPSK_QPSK_QAM16_3_sigma[] = {
        60.02613341, 64.37086126, 68.71174251, 72.3960237, 72.54487777, 68.84334267, 66.50701455, 34.02576689, 0.238832574, 0.188982237
    }; // length: 10

    const double QPSK_QPSK_QAM16_3_ber[] = {
        0.310663845, 0.274666119, 0.22819244, 0.168400452, 0.094038964, 0.054060774, 0.011565286, 0.001019643, 4.28571E-07, 3.45238E-07
    }; // length: 10

    const double QPSK_QPSK_QAM16_3_ber_Log[] = {
        -1.169043835, -1.292199032, -1.477565969, -1.781410491, -2.364046069, -2.917646424, -4.459747279, -6.888302853, -14.66280842, -14.87903153
    }; // length: 10

    // =========================QPSK+16QAM+16QAM_3=========================

    const double QPSK_QAM16_QAM16_3_mi[] = {
        0.538637927, 0.659457207, 0.802858642, 0.970974813, 1.165190463, 1.38569648, 1.433198364, 1.481222918, 1.5303124, 1.631016647
    }; // length: 10

    const double QPSK_QAM16_QAM16_3_alpha[] = {
        0, 0, 0, 0, 0, 0.7019, 0.9934, 0.9963, 0.9954, 0.997
    }; // length: 10

    const double QPSK_QAM16_QAM16_3_mu[] = {
        2875.161, 2618.1523, 2292.2155, 1860.3305, 1228.7083, 36.29922845, 5.03030303, 1.081081081, 1.152173913, 1
    }; // length: 10

    const double QPSK_QAM16_QAM16_3_sigma[] = {
        57.96538517, 62.93305619, 66.58672119, 74.65082414, 98.0044402, 52.2387944, 12.12368273, 0.276724731, 0.419914875, 0
    }; // length: 10

    const double QPSK_QAM16_QAM16_3_ber[] = {
        0.342281071, 0.311684798, 0.272882798, 0.221467917, 0.146274798, 0.00128819, 3.95238E-06, 4.7619E-07, 6.30952E-07, 3.57143E-07
    }; // length: 10

    const double QPSK_QAM16_QAM16_3_ber_Log[] = {
        -1.072123033, -1.165762866, -1.298712889, -1.507477546, -1.922268251, -6.654516777, -12.44119239, -14.5574479, -14.27603544, -14.84512998
    }; // length: 10

    class BlackBox_no2Entry {
    public:
        double m_snr; // snr of the previous hop
        double m_ber; // packet error rate of the packet of the hop before the previous hop
        int m_constellationSize; // constellation size
        double m_spectralEfficiency; // spectral Efficiency

        BlackBox_no2Entry(double snr, double ber, int constellationSize, double spectralEfficiency) :
        m_snr(snr),
        m_ber(ber),
        m_constellationSize(constellationSize),
        m_spectralEfficiency(spectralEfficiency) {
        }
    };

    class BlackBox_no2 : public Object {
    public:
        static TypeId
        GetTypeId(void);

        BlackBox_no2();
        virtual
        ~BlackBox_no2();

        /*
         * Function   blackbox_no2
         * Description: Calculate number of errors per packet after channel decoding
         * code block length L is fixed (L=8000 as specified in WP3)
         * MI is the output from blackbox_no1
         * coding/decoding scheme is presented in [2]
         * The doping rate is optimized by EXIT chart analysis (as provided by JAIST)
         * BPSK and QPSK supported, 16QAM is not available yet
         * the maximum number of parallel links supported is 3
         *
         * Inputs [dimensions]
         * MI [scalar]              Equivalent mutual information, which is the output from blackbox_no1
         * p_floor [scalar]         error floor that can be achieved, which is the lowest BER output from blackbox_no1 with the give [p1,p2,...,pN] values
         * n_link [scalar]          number of parallel links, taking values from set {1,2,3}
         * const_size [scalar]      2=BPSK, 4=QPSK (16=16QAM not supported yet)
         *
         * Outputs [dimensions]
         * n_errors[scalar]         number of errors in one block after channel decoding
         *
         */

        static int CalculateRescueBitErrorNumber(double MI, double p_floor, int n_link, int constellationSize, int block_length); // you have to be sure that there are at maximum 3 links
        static int CalculateRescueBitErrorNumber(std::vector<double> & snr_db, std::vector<double> linkBitER, int constellationSize, double spectralEfficiency, int block_length); // includes the calculation of Blackbox_no1
        static int CalculateRescueBitErrorNumber(std::vector<double> snr_db, std::vector<double> linkBitER, std::vector<int> linkConstellationSize, std::vector<double> linkSpectralEfficiency, int block_length); // includes the calculation of Blackbox_no1

    private:
        static double Interpolation(std::vector<double> x, std::vector<double> y, double x_query); // interpolation among two (x1,y2)(x2,y2) values, given back y_query
        static bool TestAllEntriesEqual(std::vector<int> vector); // test if all entries in the vector equal
        static int DetermineModulationCase(std::vector<int> vector); // determine the case if we have QPSK-16QAM, QPSK-QPSK-16QAM, QPSK-16QAM-16QAM
        static std::vector<double> GenerateRandomBlock(int blockLength, double p_floor);
        static int FindNumberErrors(std::vector<double> block);
        inline static int sgn(double x);
    };

}

#endif /* BLACKBOX_NO_2_H */
